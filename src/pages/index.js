import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import { useEffect, useState } from 'react';

const inter = Inter({ subsets: ['latin'] })

export default function Home() {
  const API_ENDPOINT = 'https://backend-x8km.api.codehooks.io/dev/front';
  const API_KEY = '46b0952c-bcf9-4398-8a08-f21325b0ab12'

  const [posts, setPosts] = useState(null);
  const [loading, setLoading] = useState(true);
  const [newPost, setNewPost] = useState(null);
  const [addingPost, setAddingPost] = useState(true);

  useEffect(() => {
    const fetchData = async () => {
      try {
        const response = await fetch(API_ENDPOINT, {
          'method': 'POST',
          'headers': {
            'x-apikey': API_KEY,
            'Content-Type': 'application/json'
          },
          'body': JSON.stringify(newPost)
        });

        const result = await response.json();
        console.log('Success: ', result);
        // Update the state so that we can update the web page in real time without 
        // performing another get request.
        setPosts(posts.concat(result));
      } catch (error) {
        console.error('Error: ', error);
      }
      setAddingPost(true);
    }
    fetchData();
  }, [newPost]); // Run this whenever a new post gets added.

  useEffect(() => {
    // if (addingPost) {
      const fetchData = async () => {
        console.log('running fetch data');
        let url = API_ENDPOINT + '?front=back';
        const response = await fetch(url, {
          'method':'GET',
          'headers': {'x-apikey': API_KEY}
        })
        const data = await response.json()
        // update state -- configured earlier.
        setPosts(data);
        setLoading(false);
        // setAddingPost(false);
      }
      fetchData();
    // }
  }, []);
  // }, [addingPost]);

  function handleSubmit(e) {
    e.preventDefault();

    const form = e.target;
    const formData = new FormData(form);

    // console.log(form);

    const formJson = Object.fromEntries(formData.entries());
    let newPost = {
      front: formJson.front,
      back: formJson.back
    }
    // console.log(formJson);
    setNewPost(newPost);
    // setPosts(posts.concat(newPost));
    console.log(newPost);
  }

  if (loading) {
    return <span>LOADING...</span>
  } else {
    let postsList = posts.map(
      (post) => 
        <p key={post._id}>{post.front}</p>
    );

    return (
      <>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <main className={styles.main}>
          <div className={styles.description}>
            {postsList}
            <form method='post' onSubmit={handleSubmit}>
              <label>
                Front: <input name='front' placeholder='Enter the front here!'></input>
              </label>
              <br></br>
              <label>
                Back: <input name='back' placeholder='Enter the back here!'></input>
              </label>
              <br></br>
              <button type='submit'>Add!</button>
            </form>
            <div>
              <a
                href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
                target="_blank"
                rel="noopener noreferrer"
              >
                By{' '}
                <Image
                  src="/vercel.svg"
                  alt="Vercel Logo"
                  className={styles.vercelLogo}
                  width={100}
                  height={24}
                  priority
                />
              </a>
            </div>
          </div>

          <div className={styles.center}>
            <Image
              className={styles.logo}
              src="/next.svg"
              alt="Next.js Logo"
              width={180}
              height={37}
              priority
            />
            <div className={styles.thirteen}>
              <Image
                src="/thirteen.svg"
                alt="13"
                width={40}
                height={31}
                priority
              />
            </div>
          </div>

          <div className={styles.grid}>
            <a
              href="https://nextjs.org/docs?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
              className={styles.card}
              target="_blank"
              rel="noopener noreferrer"
            >
              <h2 className={inter.className}>
                Docs <span>-&gt;</span>
              </h2>
              <p className={inter.className}>
                Find in-depth information about Next.js features and&nbsp;API.
              </p>
            </a>

            <a
              href="https://nextjs.org/learn?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
              className={styles.card}
              target="_blank"
              rel="noopener noreferrer"
            >
              <h2 className={inter.className}>
                Learn <span>-&gt;</span>
              </h2>
              <p className={inter.className}>
                Learn about Next.js in an interactive course with&nbsp;quizzes!
              </p>
            </a>

            <a
              href="https://vercel.com/templates?framework=next.js&utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
              className={styles.card}
              target="_blank"
              rel="noopener noreferrer"
            >
              <h2 className={inter.className}>
                Templates <span>-&gt;</span>
              </h2>
              <p className={inter.className}>
                Discover and deploy boilerplate example Next.js&nbsp;projects.
              </p>
            </a>

            <a
              href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
              className={styles.card}
              target="_blank"
              rel="noopener noreferrer"
            >
              <h2 className={inter.className}>
                Deploy <span>-&gt;</span>
              </h2>
              <p className={inter.className}>
                Instantly deploy your Next.js site to a shareable URL
                with&nbsp;Vercel.
              </p>
            </a>
          </div>
        </main>
      </>
    )
  }
}
